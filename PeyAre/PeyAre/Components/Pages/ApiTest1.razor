@page "/agecalculator"
@using PeyAre.Models
@using PeyAre.Data
@using Microsoft.EntityFrameworkCore
@inject HttpClient Http
@inject ApplicationDbContext DbContext

<MudCard Style="padding: 2rem; max-width: 400px; margin: auto; background-color: #1c1c1c;">
    <MudText Typo="Typo.h5" Style="color: #FFFFFF; margin-bottom: 1rem;">Age Calculator</MudText>

    <MudTextField @bind-Value="userName" Label="Enter your name" Variant="Variant.Filled" 
                  FullWidth="true" Style="color: #FFFFFF; background-color: #2a2a2a;" />

    <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="width: 100%; margin-top: 1rem;" @onclick="GetAge">
        Get Age
    </MudButton>

    @if (age != null)
    {
        <MudText Typo="Typo.body1" Style="color: #D3D3D3; margin-top: 1rem;">
            The estimated age of @userName is @age years old.
        </MudText>

        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Style="width: 100%; margin-top: 1rem;" @onclick="SaveAgeLog">
            Save to Database
        </MudButton>

        <MudText Typo="Typo.body2" Style="color: #6D6D6D; margin-top: 0.5rem;">
            @statusMessage
        </MudText>
    }

    <MudDivider Style="margin-top: 2rem;" />

    <MudText Typo="Typo.h6" Style="color: #FFFFFF; margin-top: 1rem;">Saved Data</MudText>

    <MudList T="ApiData">
        @if (savedAgeData != null && savedAgeData.Any())
        {
            @foreach (var data in savedAgeData.OrderByDescending(d => d.Id))
            {
                <MudListItem>
                    <MudText Style="color: #D3D3D3;">Name: @data.Name, Age: @data.Age, t: @t</MudText>
                </MudListItem>
            }
        }
        else
        {
            <MudListItem>
                <MudText Style="color: #D3D3D3;">No saved data available.</MudText>
            </MudListItem>
        }
    </MudList>

</MudCard>

@code {
    private ApiData apiData = new ApiData();
    private string userName;
    private int? age;
    private string statusMessage;
    private List<ApiData> savedAgeData = new List<ApiData>();
    private string t = "Additional Info";  // Example string value

    protected override async Task OnInitializedAsync()
    {
        await LoadSavedData();
    }

    private async Task GetAge()
    {
        if (string.IsNullOrEmpty(userName)) return;

        try
        {
            var response = await Http.GetFromJsonAsync<ApiData>($"https://api.agify.io?name={userName}");
            age = response?.Age;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async Task SaveAgeLog()
    {
        if (age != null && !string.IsNullOrEmpty(userName))
        {
            apiData.Age = (int)age;
            apiData.Name = userName;

            DbContext.ApiDatas.Add(apiData);
            await DbContext.SaveChangesAsync();
            statusMessage = "Data has been saved!";
            apiData = new ApiData();  // Reset form

            // Reload saved data to update the list
            await LoadSavedData();
        }
    }

    private async Task LoadSavedData()
    {
        savedAgeData = await DbContext.ApiDatas.ToListAsync();
    }
}
